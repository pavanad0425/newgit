AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the resources will be deployed
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Subnet ID where the EC2 instance will be deployed
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Security Group ID for the EC2 instance
  S3BucketName:
    Type: String
    Description: Name for the S3 bucket where logs will be stored
    MinLength: 3
    MaxLength: 63
    AllowedPattern: ^[a-zA-Z0-9\-]+$
    ConstraintDescription: Bucket name must be alphanumeric and dashes only
  AMIId:
    Type: AWS::EC2::Image::Id
    Description: AMI ID for the EC2 instance

Resources:
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref S3BucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID: "alias/aws/s3"
              SSEAlgorithm: aws:kms

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: MyLogGroup

  LogGroupPolicy:
    Type: AWS::Logs::LogGroupPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: logs:PutLogEvents
            Resource: !GetAtt LogGroup.Arn
      PolicyName: MyLogGroupPolicy

  S3VPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.s3"
      VpcId: !Ref VpcId
      RouteTableIds:
        - !Ref "YourRouteTable"  # Replace with the appropriate route table ID in your subnet

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMIId
      InstanceType: t2.micro   # Update as necessary
      SecurityGroupIds:
        - !Ref SecurityGroupId
      SubnetId: !Ref SubnetId

  LogGroupSubscription:
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      LogGroupName: !Ref LogGroup
      DestinationArn: !Sub "arn:aws:s3:::${MyS3Bucket}/logs/"
      FilterPattern: ""
